@inherits LayoutComponentBase
@inject IJSRuntime JS


<!DOCTYPE html>
@*<partial name="_CopyrightHeader" />*@
<html lang="en">
<head>
   
    <_Head />
    @*<partial name="_Head" />*@
    @*@RenderSection("HeadBlock", required: false)*@
</head>
<body class="mod-bg-1 ">
    <div class="page-wrapper">
        <div class="page-inner">
            <_LeftPanel />
            <div class="page-content-wrapper">
                <_PageHeader />
            </div>
        </div>
    </div>
</body>
</html>

@code{

    //protected override Task OnInitializedAsync()
    //{
    //    JS.InvokeVoidAsync("alert", "Hello world");
    //    //JS.InvokeVoidAsync("Kendo/2021.2.515/Scripts/js/jquery.min.js");

    //    //JS.InvokeAsync<IJSObjectReference>("import", "Kendo/2021.2.515/Scripts/js/jquery.min.js");
    //    //JS.InvokeAsync<IJSObjectReference>("import", "js/vendors.bundle.js");
    //    //JS.InvokeAsync<IJSObjectReference>("import", "js/site.js");
    //    return base.OnInitializedAsync();
    //}
    private IJSObjectReference? jsModule;
    private IJSObjectReference? jsModule1;
    private IJSObjectReference? jsModule2;

    protected override async Task OnInitializedAsync()
    {
        jsModule = await JS.InvokeAsync<IJSObjectReference>(
                "import", "./Kendo/2021.2.515/Scripts/js/jquery.min.js");
        jsModule1 = await JS.InvokeAsync<IJSObjectReference>(
                "import", "./js/vendors.bundle.js");

        jsModule2 = await JS.InvokeAsync<IJSObjectReference>(
                "import", "./js/site.js");

        await jsModule.InvokeVoidAsync("DOMCleanup.createObserver");
        await jsModule1.InvokeVoidAsync("DOMCleanup.createObserver");
        await jsModule2.InvokeVoidAsync("DOMCleanup.createObserver");

        //JS.InvokeVoidAsync("alert", "Hello world");
        //JS.InvokeVoidAsync("Kendo/2021.2.515/Scripts/js/jquery.min.js");

        //JS.InvokeAsync<IJSObjectReference>("import", "Kendo/2021.2.515/Scripts/js/jquery.min.js");
        //JS.InvokeAsync<IJSObjectReference>("import", "js/vendors.bundle.js");
        //JS.InvokeAsync<IJSObjectReference>("import", "js/site.js");
        //return base.OnInitializedAsync();
    }

    //protected override void OnInitialized()
    //public async Task OnInitialized()
    //{
    //    await JS.InvokeVoidAsync("alert", "Hello world");

    //    //    <script src="Kendo/2021.2.515/Scripts/js/jquery.min.js"></script>
    //    //<script src="js/vendors.bundle.js"></script>
    //    //<script src="js/site.js"></script>

    //    //JS.InvokeVoidAsync<IJSObjectReference>("import", "../Kendo/2021.2.515/Scripts/js/jquery.min.js");
    //    //JS.InvokeVoidAsync<IJSObjectReference>("", "");
    //    //JS.InvokeVoidAsync<
    //    //JS.InvokeAsync<IJSObjectReference>("import", "../js/vendors.bundle.js");
    //    //JS.InvokeAsync<IJSObjectReference>("import", "../js/site.js");
    //    //SomeStartupMethod();
    //    //await SomeStartupTask();
    //}
}


